# Copyright 2022 Criticality Score Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:

# Ensure criticality-score-collect-signals docker image already exists.
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'gcr.io/openssf/criticality-score-collect-signals:$COMMIT_SHA']

# Ensure criticality-score-init-collect-signals docker image already exists.
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'gcr.io/openssf/criticality-score-init-collect-signals:$COMMIT_SHA']

# Ensure criticality-score-csv-transfer docker image already exists.
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'gcr.io/openssf/criticality-score-csv-transfer:$COMMIT_SHA']

# Start a Cloud Deploy replease. Ignore failures as this will get run daily,
# even if latest commit hasn't changed.
- name: gcr.io/google.com/cloudsdktool/cloud-sdk
  allowFailure: true
  entrypoint: gcloud
  args:
    [
      "deploy", "releases", "create", "rel-${SHORT_SHA}",
      "--delivery-pipeline", "criticality-score-deploy",
      "--region", "us-central1",
      "--annotations", "commitId=${REVISION_ID}",
      "--skaffold-file=./infra/skaffold.yaml",
      "--images", "collect-signals=gcr.io/openssf/criticality-score-collect-signals:$COMMIT_SHA,init-collect-signals=gcr.io/openssf/criticality-score-init-collect-signals:$COMMIT_SHA,csv-transfer=gcr.io/openssf/criticality-score-csv-transfer:$COMMIT_SHA"
    ]
